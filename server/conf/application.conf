# The application languages
play.i18n.langs = ["de" , "en"]


# google client ID, the GoogleIdTokenVerifier class verifies the audience field by 
# comparing it against the client ID of the server-side application
google.ClientID       = ${GOOGLE_CLIENTID} 
play.http.secret.key  = ${PLAY_HTTP_SECRET_KEY}
pidfile.path          = ${PIDFILE_PATH} 


## Static assets
# Using configuration and assets finder
# https://www.playframework.com/documentation/latest/AssetsOverview
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}


#
# Play Mailer
#
play.mailer {
  host        = ${PLAY_MAILER_HOST}  // (mandatory)
  port        = ${PLAY_MAILER_PORT}                   // (defaults to 25)
  ssl         = yes               // (defaults to no)
  tls         = yes               // (defaults to no)
  tlsRequired = yes               // (defaults to no)
  user        = ${PLAY_MAILER_USER}  
  password    = ${PLAY_MAILER_PASSWORD}           
  # debug = no      // production mode (defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  debug = yes       // development mode 
  timeout = null    // (defaults to 60s in milliseconds)
  connectiontimeout = null // (defaults to 60s in milliseconds)
  #mock = no        // production mode (defaults to no, will only log all the email properties instead of sending an email)
  mock = yes        // development mode 
}


# Database configuration
# https://www.playframework.com/documentation/latest/Configuration
# ~~~~~ 
# To configure MySQL
# Default database configuration using MySQL database engine
# Connect to playdb as playdbuser
# com.mysql.cj.jdbc.Driver is the new driver cj stands for Connector/J library 

# disable evolutions 
# play.evolutions.enabled=false

play.evolutions.enabled=true
play.evolutions.db.default.autoApply=true

db.default.driver   = ${DB_DEFAULT_DRIVER}
db.default.url      = ${DB_DEFAULT_URL}
db.default.username = ${DB_DEFAULT_USERNAME}              
db.default.password = ${DB_DEFAULT_PASSWORD} 
play.evolutions.db.default.autoApply=true

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}